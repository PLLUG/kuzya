[info]
language=c++
filter=*.cpp *.c *.cxx *.h

[templates]
var\1\label=void
var\1\template=void
var\2\label=char
var\2\template=char
var\3\label=wchar_t
var\3\template=wchar_t
var\4\label=short
var\4\template=short
var\5\label=int
var\5\template=int
var\6\label=double
var\6\template=double
var\7\label=float
var\7\template=float
var\8\label=long
var\8\template=long
var\9\label=bool
var\9\template=bool
var\10\label=signed
var\10\template=signed
var\11\label=unsigned
var\11\template=unsigned
var\12\label=const
var\12\template=const
var\size=12

types\1\label=typedef
types\1\template=typedef
types\2\label=class
types\2\template="class \n{ \n};"
types\3\label=struct
types\3\template="struct \n{ \n};"
types\4\label=union
types\4\template=union
types\5\label=enum 
types\5\template="enum\n{ \n};"
types\size=5

memory\1\label=new
memory\1\template=new
memory\2\label=delete
memory\2\template=delete
memory\size=2


cast\1\label=const_cast
cast\1\template="const_cast()"
cast\2\label=reinterpret_cast
cast\2\template="reinterpret_cast()"
cast\3\label=static_cast
cast\3\template="static_cast()"
cast\size=3

binary\1\label=and
binary\1\template=and
binary\2\label=and_eq
binary\2\template=and_eq
binary\3\label=bitand
binary\3\template=bitand
binary\4\label=bitor
binary\4\template=bitor
binary\5\label=compl
binary\5\template=compl
binary\6\label=not
binary\6\template=not
binary\7\label=not_eq
binary\7\template=not_eq
binary\8\label=or
binary\8\template=or
binary\9\label=or_eq
binary\9\template=or_eq
binary\10\label=xor
binary\10\template=xor
binary\11\label=xor_eq
binary\11\template=xor_eq
binary\size=11

bool\1\label=true
bool\1\template=true
bool\2\label=false
bool\2\template=false
bool\size=2

modifiers\1\label=private
modifiers\1\template="private:"
modifiers\2\label=protected
modifiers\2\template="protected:"
modifiers\3\label=public
modifiers\3\template="public:"
modifiers\4\label=friend
modifiers\4\template="friend"
modifiers\5\label=virtual
modifiers\5\template="virtual:"
modifiers\6\label=extern
modifiers\6\template="extern"
modifiers\7\label=inline
modifiers\7\template="inline"
modifiers\8\label=static
modifiers\8\template="static"
modifiers\size=8

flow_control\1\label=case
flow_control\1\template="case:  ; \n break;"
flow_control\2\label=break
flow_control\2\template="break;"
flow_control\3\label=continue
flow_control\3\template="continue;"
flow_control\4\label=do..while
flow_control\4\template="do \n { \n} \n while"
flow_control\5\label=else
flow_control\5\template=else
flow_control\6\label=for
flow_control\6\template="for( ; ; ) \n{\n}"
flow_control\7\label=goto
flow_control\7\template=goto
flow_control\8\label=if
flow_control\8\template="if() \n { \n}"
flow_control\9\label=return
flow_control\9\template=return
flow_control\10\label=switch
flow_control\10\template="switch() \n{\n}"
flow_control\11\label=while
flow_control\11\template="while() \n{\n}"
flow_control\size=11

exception\1\label=try
exception\1\template="try \n{\n}"
exception\2\label=catch
exception\2\template="catch() \n{\n}"
exception\3\label=throw
exception\3\template="throw()"
exception\size=3

graphics\1\label=RGB
graphics\1\template=RGB
graphics\size=1