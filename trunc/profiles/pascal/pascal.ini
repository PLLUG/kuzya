[info]
language=pascal
filter=*.fpc *.pas *.pp

[templates]
examples\1\label="Hello World"
examples\1\template="program HelloWorld;
begin
  writeln(\'Hello World\');
  readln;
end."
examples\2\label="Hello KuzyaGraph"
examples\2\template="Uses graph
Program Hello_KuzyaGraph;
begin
	initgraph();
	
	circle(200,200,100);
	line(200,275,200,240);
	line(200,240,215,230);
	line(200,240,185,230);
	arc(200,258,950,950,30);
	arc(200,200,-950,-950,75);
	
	line(140,90,130,129);
	line(140,90,160,110);
	
	ellipse(150,175,25,15);
	ellipse(250,175,25,15);
	
	ellipse(150,175,5,12);
	ellipse(250,175,5,12);
	
	line(260,90,270,130);
	line(260,90,240,110);
	
	
	line(120,230,50,200);
	line(125,218,40,170);
	line(123,240,60,230);
	
	line(280,230,350,200);
	line(275,218,360,170);
	line(277,240,340,230);
	
	outtextxy(200,30,\"Hello,KuzyaGraph!!!\");  
	closegraph();
end."
examples\size=2


;---------------FUNCTIONS---------------------------
functions\1\label=abs();
functions\1\template=abs()
functions\2\label=sqr()
functions\2\template=sqr()
functions\3\label=sqrt()
functions\3\template=sqrt()
functions\4\label=odd()
functions\4\template=odd()
functions\5\label=chr()
functions\5\template=chr()
functions\6\label=ord()
functions\6\template=ord()
functions\7\label=succ()
functions\7\template=succ()
functions\8\label=pred()
functions\8\template=pred()
functions\9\label=round()
functions\9\template=round()
functions\10\label=trunc()
functions\10\template=trunc()
functions\11\label=sin()
functions\11\template=sin()
functions\12\label=cos()
functions\12\template=cos()
functions\13\label=exp()
functions\13\template=exp()
functions\14\label=ln()
functions\14\template=ln()
functions\15\label=arctan()
functions\15\template=arctan()
functions\16\label=random()
functions\16\template=random()
functions\17\label=pi
functions\17\template=pi
functions\size=17
;---------------GRAPHICS--------------------
graphics\1\label="initgraph();"
graphics\1\template="initgraph();"
graphics\2\label="arc( , , , ,);"
graphics\2\template="arc( , , , ,);"
graphics\3\label="bar(,,,);"
graphics\3\template="bar( , , );"
graphics\4\label="bar3D(, , , ,);"
graphics\4\template="bar3D( , , , , );"
graphics\5\label="circle( , , );"
graphics\5\template="circle( , , );"
graphics\6\label="clearDevice();"
graphics\6\template="clearDevice();"
graphics\7\label="closegraph()"
graphics\7\template="closegraph()"
graphics\8\label="ellipse( , , );"
graphics\8\template="ellipse( , , );"
graphics\9\label="fillellipse( , , ,);"
graphics\9\template="fillellipse( , , ,);"
graphics\10\label="line( , , , );"
graphics\10\template="line( , , , );"
graphics\11\label="lineto( , );"
graphics\11\template="lineto( , );"
graphics\12\label="moveto( , )"
graphics\12\template="moveto( , )"
graphics\13\label="outText();"
graphics\13\template="outText();"
graphics\14\label="outTextXY( , , );"
graphics\14\template="outTextXY( , , );"
graphics\15\label="pieslice( , , , ,);"
graphics\15\template="pieslice( , , , , );"
graphics\16\label="putPixel( , );"
graphics\16\template="putPixel( , );"
graphics\17\label="setColor();"
graphics\17\template="setColor();"
graphics\18\label="setLineStyle( , );"
graphics\18\template="setLineStyle( , );"
graphics\19\label="setTextStyle( , , );"
graphics\19\template="setTextStyle( , , );"
graphics\20\label=getmaxx()
graphics\20\template="getmaxx();"
graphics\21\label=getmaxy()
graphics\21\template="getmaxy();"
graphics\22\label=image(...)
graphics\22\template="image( );"
graphics\23\label=setbkcolor(...)
graphics\23\template="setbkcolor( );"
graphics\24\label=setcolor(...)
graphics\24\template="setcolor( );"
graphics\25\label=setfillcolor(...)
graphics\25\template="setfillcolor( );"
graphics\26\label=setfillstyle(...)
graphics\26\template="setfillstyle( );"
graphics\27\label=rectangle(...)
graphics\27\template="rectangle( );"
graphics\size=27

;---------------DESCRIPTIONS--------------------
descriptions\1\label="Program NoName Begin...End. "
descriptions\1\template="Program NoName\n\nBegin\n\nEnd. "
descriptions\2\label="Procedure  ; begin...end; "
descriptions\2\template="Procedure  ; \nbegin\n\nend; "
descriptions\3\label="Function : ; begin...end;"
descriptions\3\template="Function   :   ;\nbegin\n\nend; "
descriptions\4\label="Unit unitNoname; Intrface ... Implementation...End. "
descriptions\4\template="Unit unitNoname;\nInterface \n\t\nImplementation\n\t\nEnd. "
descriptions\5\label=var
descriptions\5\template=var
descriptions\6\label="type="
descriptions\6\template="type="
descriptions\size=6
;---------------Input/Output------------------------
input_and_output\1\label="read();"
input_and_output\1\template="read( );"
input_and_output\2\label="readLn();"
input_and_output\2\template="readLn( )"
input_and_output\3\label="write();"
input_and_output\3\template="write( );"
input_and_output\4\label="writeLn();"
input_and_output\4\template="writeLn( );"
input_and_output\size=4
;---------------text_manipulations-------------------
text_manipulations\1\label="concat(,)"
text_manipulations\1\template="concat(,)"
text_manipulations\2\label="copy(, ,)"
text_manipulations\2\template="copy(, ,)"
text_manipulations\3\label="delete(, ,)"
text_manipulations\3\template="delete( , , )"
text_manipulations\4\label="insert( , ,)"
text_manipulations\4\template="insert( , , )"
text_manipulations\5\label="length()"
text_manipulations\5\template="length(  )"
text_manipulations\6\label="pos( , )"
text_manipulations\6\template="pos( , )"
text_manipulations\7\label="upperCase()"
text_manipulations\7\template="upperCase(  )"
text_manipulations\8\label="lowerCase()"
text_manipulations\8\template="lowerCase(  )"
text_manipulations\9\label="val( , , )"
text_manipulations\9\template="val( , , )"
text_manipulations\10\label="str( , )"
text_manipulations\10\template="str( , )"
text_manipulations\size=10
;------VARIABLES TYPES------------------
var\1\label="shortint"
var\1\template="shortint"
var\2\label="integer"
var\2\template="integer"
var\3\label="longint"
var\3\template="longint"
var\4\label=byte
var\4\template=byte
var\5\label=word
var\5\template=word
var\6\label=real
var\6\template=real
var\7\label=single
var\7\template=single
var\8\label=double
var\8\template=double
var\9\label=extended
var\9\template=extended
var\10\label=comp
var\10\template=comp
var\11\label=char
var\11\template=char
var\12\label=boolean
var\12\template=boolean
var\13\label=pointer
var\13\template=pointer
var\14\label="array [..] of"
var\14\template="array  of"
var\15\label=string
var\15\template=string
var\16\label=record
var\16\template="record    end;"
var\17\label=text
var\17\template=text
var\18\label=file
var\18\template=file
var\size=18

;------------BOOLEAN--------------------------
boolean\1\label=true
boolean\1\template=true
boolean\2\label=false
boolean\2\template=false
boolean\size=2

;-------------BINARY----------------------------
binary\1\label=and
binary\1\template=and
binary\2\label=or
binary\2\template=or
binary\3\label=xor
binary\3\template=xor
binary\4\label=not
binary\4\template=not
binary\5\label=shl
binary\5\template=shl
binary\6\label=shr
binary\6\template=shr
binary\size=6

;-------------FLOW CONTROL------------------------
flow_control\1\label=case of
flow_control\1\template="case    of"
flow_control\2\label=break
flow_control\2\template="break;"
flow_control\3\label=continue
flow_control\3\template="continue;"
flow_control\4\label=while...do
flow_control\4\template="while do"
flow_control\5\label=repeat...until;
flow_control\5\template="repeat    until  ;"
flow_control\6\label=for to do
flow_control\6\template="for    to     do "
flow_control\7\label=for  downto   do
flow_control\7\template=for  downto   do
flow_control\8\label="if then"
flow_control\8\template="if       then"
flow_control\9\label=else
flow_control\9\template=else
flow_control\10\label=goto
flow_control\10\template="goto"
flow_control\11\label=while
flow_control\11\template="while"
flow_control\size=11
;-----------OPERATIONS WITH FILES-------------------------
operations_with_files\1\label="assign(,);"
operations_with_files\1\template="assign( , );"
operations_with_files\2\label="reset(  ); "
operations_with_files\2\template="reset(  ); "
operations_with_files\3\label="rewrite();"
operations_with_files\3\template="rewrite(  );"
operations_with_files\4\label="close();"
operations_with_files\4\template="close(  );"
operations_with_files\5\label=eof()
operations_with_files\5\template=eof(  )
operations_with_files\6\label=eoln()
operations_with_files\6\template=eoln(  )
operations_with_files\size=6